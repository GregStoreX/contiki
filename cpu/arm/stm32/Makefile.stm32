# Following need to be defined outside of this file

ifndef LIBOPENCM3_HOME
  $(error please set LIBOPENCM3_HOME to point to the top of libopencm3 source)
endif

ifndef LIBOPENCM3_TARGET
  $(error platform Makefile should define LIBOPENCM3_TARGET. e.g. "stm32/f1")
endif

ifndef LINKERSCRIPT
  $(error platform Makefile should define LINKERSCRIPT)
endif

ifndef OPENOCD_PARAMS
  $(error platform Makefile should define OPENOCD_PARAMS)
endif

LIBOPENCM3_SUFFIX = $(subst /,,$(LIBOPENCM3_TARGET))

LIBOPENCM3_CFLAGS = -D$(shell echo $(LIBOPENCM3_SUFFIX)|tr [a-z] [A-Z]) \
                    -I$(LIBOPENCM3_HOME)/include

### Code common for all ARM CPUs

CONTIKI_CPU_ARM=$(CONTIKI)/cpu/arm/
CONTIKI_CPU_ARM_COMMON=$(CONTIKI_CPU_ARM)/common

### Define the CPU directory

CONTIKI_CPU=$(CONTIKI)/cpu/arm/stm32

### Define the source files we have in the STM32F103 port

CONTIKI_CPU_DIRS = .

CONTIKI_SOURCEFILES += clock.c


THREADS =

# Toolchain definitions

GCC_TARGET ?= arm-none-eabi

CC       = $(GCC_TARGET)-gcc
LD       = $(GCC_TARGET)-ld
AS       = $(GCC_TARGET)-as
AR       = $(GCC_TARGET)-ar
NM       = $(GCC_TARGET)-nm
OBJCOPY  = $(GCC_TARGET)-objcopy
STRIP    = $(GCC_TARGET)-strip

OPENOCD	 = openocd

PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_MAIN:.c=.o)}

ARCH_FLAGS= -march=armv7-m -mthumb

CFLAGSNO = -I. -I$(CONTIKI)/core -I$(CONTIKI_CPU) \
           ${addprefix -I,$(APPDIRS)} \
           -DWITH_UIP -DWITH_ASCII -DMCK=$(MCK) \
           -Wall $(ARCH_FLAGS) -g

CFLAGS  += $(CFLAGSNO) -O -DRUN_AS_SYSTEM -DROM_RUN \
           $(LIBOPENCM3_CFLAGS)
LDFLAGS += -L $(CONTIKI_CPU) -T $(LINKERSCRIPT) -nostartfiles \
           -L $(LIBOPENCM3_HOME)/lib/$(LIBOPENCM3_TARGET) \
           -Wl,--gc-sections

CDEPFLAGS = $(CFLAGS) -D __MAKING_DEPS__




### Setup directory search path for source files

CUSTOM_RULE_C_TO_OBJECTDIR_O=yes
CUSTOM_RULE_C_TO_O=yes

%.o: %.c
	$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@


CUSTOM_RULE_S_TO_OBJECTDIR_O = yes
%.o: %.S
	$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.S
	$(CC) $(CFLAGS) $< -c  -o $@


CUSTOM_RULE_C_TO_CO=yes

%.co: %.c
	$(CC) $(CFLAGS) $< -c -o $@

CUSTOM_RULE_C_TO_CE=yes

%.ce: %.o
	$(LD) $(LDFLAGS) --relocatable -T $(CONTIKI_CPU)/merge-rodata.ld $< -o $@
	$(STRIP) -K _init -K _fini --strip-unneeded -g -x $@

CUSTOM_RULE_LINK=yes

%-stripped.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@
	$(STRIP) --strip-unneeded -g -x $@

%-stripped.o: %.o
	$(STRIP) --strip-unneeded -g -x -o $@ $<

%.o: ${CONTIKI_TARGET}/loader/%.S
	$(AS) -o $(notdir $(<:.S=.o)) $<

%-nosyms.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a # $(OBJECTDIR)/empty-symbols.o
	$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) $(filter %.a,$^) -lopencm3_$(LIBOPENCM3_SUFFIX) -lc -lnosys


%.ihex: %.$(TARGET)
	$(OBJCOPY) $^ -O ihex $@

%.bin: %.$(TARGET)
	$(OBJCOPY) -O binary $< $@
 
.PHONY: symbols.c
ifdef CORE
%.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a $(OBJECTDIR)/symbols.o
	$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)

symbols.c: $(CORE)
	$(NM) $< | awk -f $(CONTIKI_CPU)/builtins.awk -f ../../tools/mknmlist > symbols.c

else
%.$(TARGET): %-nosyms.$(TARGET)
	ln -sf $< $@
endif

empty-symbols.c:
	cp ${CONTIKI}/tools/empty-symbols.c symbols.c
	cp ${CONTIKI}/tools/empty-symbols.h symbols.h



%.u: %.bin
	$(OPENOCD) $(OPENOCD_PARAMS) -c "init;reset halt;poll;stm32f1x mass_erase 0;flash write_bank 0 $< 0;reset run;shutdown"

ocd_reset:
	$(OPENOCD) $(OPENOCD_PARAMS) -c "init;reset halt;poll;reset run;shutdown"

# Don't use core/loader/elfloader.c, use elfloader-otf.c instead
$(OBJECTDIR)/elfloader.o: 
	echo -n >$@

clean: clean_cpu

clean_cpu:
	-rm -rf $(BUILTSRCDIR)

.PRECIOUS: %-nosyms.$(TARGET)
